name: CI / Deploy backend -> Render (curl)

# trigger on pushes to your 'backend' branch
on:
    push:
        branches: ["backend"]
    workflow_dispatch:

jobs:
    ci:
        name: Run CI
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repo
              uses: actions/checkout@v4
              with:
                fetch-depth: 0

            - name: Check for backend/package.json
              id: check_pkg
              run: |
                if [ -f backend/package.json ]; then
                    echo "exists=true" >> $GITHUB_OUTPUT
                else 
                    echo "exists=false" >> $GITHUB_OUTPUT
                fi

            - name: Set up Node
              if: steps.check_pkg.outputs.exists == 'true'
              uses: actions/setup-node@v4
              with:
                node-version: '22.19.0'

            - name: Install dependencies & run tests
              if: steps.check_pkg.outputs.exists == 'true'
              run: |
                cd backend
                npm ci
                if grep -q "\"test\":" package.json; then
                    npm test
                else
                    echo "No test script found - skipping tests."
                fi
              env:
                CI: true

    deploy:
        name: Deploy to render
        runs-on: ubuntu-latest
        needs: ci
        steps:
            - name: Checkout repo (for context/logs)
              uses: actions/checkout@v4
              with:
                fetch-depth: 0

            - name: Trigger Render deploy (using marketplace action)
              uses: johnbeynon/render-deploy-action@v0.0.8
              with: 
                service-id: ${{ secrets.RENDER_SERVICE_ID }}
                api-key: ${{ secrets.RENDER_API_KEY }}
                wait-for-success: false

            - name: Poll Render deploy logs
              env: 
                RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
                RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
              
              run: |
                echo "Polling latest deploy logs..."
                # Get latest deploy id
                DEPLOY_ID=$(curl -s \
                    -H "Authorization: Bearer $RENDER_API_KEY"\
                    "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys?limit=1" \
                    | jp -r '.[0].id')

                echo "Deploy ID: $DEPLOY_ID"

                # Poll until deploy finishes
                STATUS="in_progress"
                while ["$STATUS"="in_progress"] || ["$STATUS"="build_in_progress"]; do
                    echo "Fetching logs..."
                    curl -s \
                        -H "Authorization: Bearer $RENDER_API_KEY" \
                        "https://api.render.com/v1/services/$RENDER_SERVICE_ID/logs?tail=50" \
                        | jq -r '.[]?.message'

                    STATUS=$(curl -s \ 
                        -H "Authorization: Bearer $RENDER_API_KEY" \
                        "https://api.render.com/v1/deploys/$DEPLOY_ID" \
                        | jq -r '.status')
                    echo "Current status: $STATUS"
                    sleep 10
                done

                if ["$STATUS" = "live" ]; then
                    echo "Deploy Succeeded!"
                else
                    echo "Deploy Failed!"
                    exit 1
                fi
